buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsGradlePluginVersion"
    }
}

plugins {
    id 'org.asciidoctor.convert' version '1.5.3'
}

//version "4.0.0"
version "4.0.0.BUILD-SNAPSHOT"
group "org.grails.plugins"

apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "org.grails.grails-plugin"
apply plugin: "maven-publish"
apply plugin:"org.grails.internal.grails-plugin-publish"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

configurations {
    documentation
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"

    implementation "org.grails:grails-web-boot"
    implementation 'javax.servlet:javax.servlet-api:3.1.0'
    profile "org.grails.profiles:plugin"

    testImplementation "org.grails:grails-gorm-testing-support"

    console "org.grails:grails-console"

    implementation "org.grails.plugins:cache:5.0.1"
    implementation 'org.ehcache:ehcache:3.4.0'

    documentation "org.codehaus.groovy:groovy-all"

}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
}
// enable if you wish to package this plugin as a standalone application
bootJar.enabled = false

grailsPublish {
    userOrg = "grails"
    githubSlug = 'grails-plugins/grails-cache-ehcache'
    license {
        name = 'Apache-2.0'
    }
    title = "Grails Cache Ehcache Plugin"
    desc = "Provides an ehcache implementation of the cache plugin"
    developers = [jameskleeh: "James Kleeh"]
}

asciidoctor {
    resources {
        from('src/docs/images')
        into "./images"
    }

    attributes 'experimental'  : 'true',
            'compat-mode'   : 'true',
            'toc'           : 'left',
            'icons'         : 'font',
            'version'       : project.version,
            'groupId'       : project.group,
            'artifactId'    : project.name,
            'sourcedir'     : "${projectDir}/src/main/groovy"
}

task apidocs(type: Groovydoc) {
    source project.files('src/main/groovy')

    destinationDir = new File(buildDir, 'docs/api')
    // Might need a classpath
    docTitle = "Grails Cache Ehcache ${version}"

    classpath = configurations.documentation
    groovyClasspath = configurations.documentation
}

task docs(type:Copy, dependsOn:[apidocs, asciidoctor])  {
    from "$buildDir/asciidoc/html5"
    into "$buildDir/docs"
}

tasks.withType(Test) {
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat 'full'
    }
}
